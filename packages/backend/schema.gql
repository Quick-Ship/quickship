# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type invoice {
  id: Float!
  socialReazon: String!
  rfc: String!
  street: String!
  neigthboorhood: String!
  municipality: String!
  state: String!
  externalNumber: Float!
  internalNumber: Float!
  zipCode: Float!
  taxRegimen: Float!
  cfdi: String!
  clientId: Float
  client: Clients
  createAt: DateTime!
  updateAt: DateTime!
  deleteAt: DateTime
  getClient: Clients!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type contact {
  id: Float!
  firstName: String!
  lastName: String!
  phone: String!
  email: String!
  packageId: Float!
  package: package!
  createAt: DateTime!
  updateAt: DateTime!
  deleteAt: DateTime
}

type package {
  id: Float!
  guide: String!
  weigth: Float!
  width: Float!
  heigth: Float!
  legth: Float!
  orderId: Float
  order: order!
  directionId: Float
  direction: directions!
  contact_id: Float
  contact: contact!
  createAt: DateTime!
  updateAt: DateTime!
  deleteAt: DateTime
}

type directions {
  id: Float!
  street: String!
  neigthboorhood: String!
  municipality: String!
  state: String!
  externalNumber: String!
  internalNumber: String!
  zipCode: Float!
  latitude: Float!
  longitude: Float!
  order: order
  packageId: Float!
  packages: package
  createAt: DateTime!
  updateAt: DateTime!
  deleteAt: DateTime
}

type messenger {
  id: String!
  firstName: String!
  lastName: String!
  phone: String!
  email: String!
  orders: order
  createAt: DateTime!
  updateAt: DateTime!
  deleteAt: DateTime
}

type orderStatus {
  id: String!
  name: String!
  description: String!
  orders: order
  createAt: DateTime!
  updateAt: DateTime!
  deleteAt: DateTime
}

type order {
  id: Float!
  contactName: String!
  contactLastName: String!
  contactPhone: String!
  contactEmail: String!
  comments: String!
  price: Float!
  clientId: Float
  packages: package
  client: Clients!
  recolectionId: Float
  recolection: directions!
  messengerId: Float
  messenger: messenger!
  orderStatuses: orderStatus
  createAt: DateTime!
  updateAt: DateTime!
  deleteAt: DateTime
  getOrderStatus: orderStatus!
}

type Clients {
  id: Float!
  firstName: String!
  lastName: String!
  phone: String!
  email: String!
  orders: order
  invoices: invoice
  createAt: DateTime!
  updateAt: DateTime!
  deleteAt: DateTime
}

type Query {
  sayHello: String!
  clients: [Clients!]!
  client(client: Int!): Clients!
  directions: [directions!]!
  direction(id: Int!): directions!
  messengers: [messenger!]!
  messenger(id: Int!): messenger!
  invoices: [invoice!]!
  invoice(id: Int!): invoice!
  orderStatuses: [orderStatus!]!
  orderStatus(id: Int!): orderStatus!
  packages: [package!]!
  package(id: Int!): package!
  orders: [order!]!
  order(id: Int!): order!
  contacts: [contact!]!
  contact(id: Int!): contact!
}

type Mutation {
  createClient(createClient: ClientInput!): Clients!
  updateClient(updateClient: updateClientInput!): Clients!
  createDirection(createDirectionInput: directionInput!): directions!
  updateDirection(updateDirectionInput: updateDirectionInput!): directions!
  createMessenger(createMessengerInput: messengerInput!): messenger!
  updateMessenger(updateMessengerInput: updateMessengerInput!): messenger!
  createInvoice(createInvoiceInput: invoiceInput!): invoice!
  updateInvoice(updateInvoiceInput: updateInvoiceInput!): invoice!
  createOrderStatus(createOrderStatusInput: orderStatusInput!): orderStatus!
  updateOrderStatus(updateOrderStatusInput: updateOrderStatusInput!): orderStatus!
  createPackage(createPackageInput: packagesInput!): package!
  updatePackage(updatePackageInput: UpdatePackageInput!): package!
  createOrder(createOrderInput: orderInput!): order!
  updateOrder(updateOrderInput: updateOrderInput!): order!
  createContact(createContactInput: ContactInput!): contact!
  updateContact(updateContactInput: updateContactInput!): contact!
}

input ClientInput {
  firstName: String!
  lastName: String!
  phone: String!
  email: String!
}

input updateClientInput {
  firstName: String
  lastName: String
  phone: String
  email: String
}

input directionInput {
  street: String!
  neigthboorhood: String!
  municipality: String!
  state: String!
  externalNumber: Float!
  internalNumber: Float = 0
  zipCode: Float!
  latitude: Float!
  longitude: Float!
}

input updateDirectionInput {
  street: String
  neigthboorhood: String
  municipality: String
  state: String
  externalNumber: Float
  internalNumber: Float
  zipCode: Float
  latitude: Float
  longitude: Float
  packageId: Float
}

input messengerInput {
  firstName: String!
  lastName: String!
  phone: String!
  email: String!
}

input updateMessengerInput {
  firstName: String
  lastName: String
  phone: String
  email: String
}

input invoiceInput {
  socialReazon: String!
  rfc: String!
  street: String!
  neigthboorhood: String!
  municipality: String!
  state: String!
  externalNumber: Float!
  internalNumber: Float!
  zipCode: Float!
  taxRegimen: Float!
  cfdi: String!
}

input updateInvoiceInput {
  socialReazon: String
  rfc: String
  street: String
  neigthboorhood: String
  municipality: String
  state: String
  externalNumber: Float
  internalNumber: Float
  zipCode: Float
  taxRegimen: Float
  cfdi: String
}

input orderStatusInput {
  name: String!
  description: String!
}

input updateOrderStatusInput {
  name: String
  description: String
}

input packagesInput {
  weigth: Float!
  width: Float!
  heigth: Float!
  legth: Float!
  contact: ContactInput!
  direction: directionInput!
}

input ContactInput {
  firstName: String!
  lastName: String!
  phone: String!
  email: String!
}

input UpdatePackageInput {
  weigth: Float!
  width: Float!
  heigth: Float!
  legth: Float!
}

input orderInput {
  comments: String!
  price: Float!
  packges: [packagesInput!]!
}

input updateOrderInput {
  contactName: String!
  contactLastName: String!
  contactPhone: String!
  contactEmail: String!
  comments: String!
  price: Float!
}

input updateContactInput {
  firstName: String
  lastName: String
  phone: String
  email: String
  packageId: Float
}
